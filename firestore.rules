rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    /* ───── users ───── */
    match /users/{uid} {
      allow read, write: if request.auth.uid == uid;
    }

    /* ───── friend-requests ───── */
    match /friendRequests/{reqID} {
      allow create: if request.auth.uid == request.resource.data.from;
      allow read, update, delete:
        if request.auth.uid in [resource.data.from, resource.data.to];
    }

    /* ───── friends pair-docs ───── */
    match /friends/{pairID} {
      allow read : if request.auth.uid in resource.data.users;
      allow write: if false;   // updated only via Cloud Functions
    }

    /* ───── hangouts tree ───── */
    match /hangouts/{hid} {

      allow create: if request.auth.uid != null;

      allow read, update, delete:
        if request.auth.uid in resource.data.participants;

      /* checkpoints inherit participants rule */
      match /checkpoints/{doc} {
        allow read, write:
          if request.auth.uid in
             get(/databases/$(db)/documents/hangouts/$(hid)).data.participants;
      }

      /* expenses inherit participants rule */
      match /expenses/{doc} {
        allow read, write:
          if request.auth.uid in
             get(/databases/$(db)/documents/hangouts/$(hid)).data.participants;
      }
    }

    /* ───── per-user feed fan-out ───── */
    match /feed/{uid}/{col}/{docID} {
      allow read, write: if request.auth.uid == uid;
    }

    /* ───── per-user stats doc (read-only) ───── */
    match /stats/{uid} {
      allow read : if request.auth.uid == uid;
      allow write: if false;
    }
  }
}
